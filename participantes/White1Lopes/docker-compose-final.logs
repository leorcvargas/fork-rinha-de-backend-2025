
 Network white1lopes_app-network  Creating
 Network white1lopes_app-network  Created
 Container white1lopes-redis-1  Creating
 Container white1lopes-redis-1  Created
 Container white1lopes-api1-1  Creating
 Container white1lopes-api2-1  Creating
 Container white1lopes-api2-1  Created
 Container white1lopes-api1-1  Created
 Container white1lopes-load-balancer-1  Creating
 Container white1lopes-load-balancer-1  Created
Attaching to api1-1, api2-1, load-balancer-1, redis-1
redis-1  | Starting Redis Server
redis-1  | 1:C 18 Aug 2025 05:34:26.883 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis-1  | 1:C 18 Aug 2025 05:34:26.883 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis-1  | 1:C 18 Aug 2025 05:34:26.883 * Redis version=8.2.0, bits=64, commit=00000000, modified=1, pid=1, just started
redis-1  | 1:C 18 Aug 2025 05:34:26.883 * Configuration loaded
redis-1  | 1:M 18 Aug 2025 05:34:26.884 * monotonic clock: POSIX clock_gettime
redis-1  | 1:M 18 Aug 2025 05:34:26.886 * Running mode=standalone, port=6379.
redis-1  | 1:M 18 Aug 2025 05:34:26.890 * <bf> RedisBloom version 8.2.0 (Git=unknown)
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> Registering configuration options: [
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ bf-error-rate       :      0.01 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ bf-initial-size     :       100 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ bf-expansion-factor :         2 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ cf-bucket-size      :         2 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ cf-initial-size     :      1024 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ cf-max-iterations   :        20 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ cf-expansion-factor :         1 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> 	{ cf-max-expansions   :        32 }
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * <bf> ]
redis-1  | 1:M 18 Aug 2025 05:34:26.891 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis-1  | 1:M 18 Aug 2025 05:34:26.976 * <search> Redis version found by RedisSearch : 8.2.0 - oss
redis-1  | 1:M 18 Aug 2025 05:34:26.976 * <search> RediSearch version 8.2.0 (Git=d81ebce)
redis-1  | 1:M 18 Aug 2025 05:34:26.977 * <search> Low level api version 1 initialized successfully
redis-1  | 1:M 18 Aug 2025 05:34:26.980 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis-1  | 1:M 18 Aug 2025 05:34:26.983 * <search> Initialized thread pools!
redis-1  | 1:M 18 Aug 2025 05:34:26.983 * <search> Disabled workers threadpool of size 0
redis-1  | 1:M 18 Aug 2025 05:34:26.987 * <search> Subscribe to config changes
redis-1  | 1:M 18 Aug 2025 05:34:26.987 * <search> Enabled role change notification
redis-1  | 1:M 18 Aug 2025 05:34:26.988 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
redis-1  | 1:M 18 Aug 2025 05:34:26.988 * <search> Register write commands
redis-1  | 1:M 18 Aug 2025 05:34:26.988 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> RedisTimeSeries version 80200, git_sha=1439d4a439ca9c063e6ef124a510abff09a5d493
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> Redis version found by RedisTimeSeries : 8.2.0 - oss
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> Registering configuration options: [
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-compaction-policy   :              }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-num-threads         :            3 }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-retention-policy    :            0 }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-encoding            :   compressed }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis-1  | 1:M 18 Aug 2025 05:34:26.994 * <timeseries> ]
redis-1  | 1:M 18 Aug 2025 05:34:26.995 * <timeseries> Detected redis oss
redis-1  | 1:M 18 Aug 2025 05:34:26.995 * <timeseries> Enabled diskless replication
redis-1  | 1:M 18 Aug 2025 05:34:26.995 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis-1  | 1:M 18 Aug 2025 05:34:27.007 * <ReJSON> Created new data type 'ReJSON-RL'
redis-1  | 1:M 18 Aug 2025 05:34:27.011 * <ReJSON> version: 80200 git sha: unknown branch: unknown
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Exported RedisJSON_V1 API
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Exported RedisJSON_V2 API
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Exported RedisJSON_V3 API
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Exported RedisJSON_V4 API
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Exported RedisJSON_V5 API
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Enabled diskless replication
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <ReJSON> Initialized shared string cache, thread safe: false.
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * <search> Acquired RedisJSON_V5 API
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * Server initialized
redis-1  | 1:M 18 Aug 2025 05:34:27.012 * Ready to accept connections tcp
api1-1   | json: {"failing":false,"minResponseTime":0}
api1-1   | json: {"failing":false,"minResponseTime":0}
load-balancer-1  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
load-balancer-1  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
load-balancer-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
load-balancer-1  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
load-balancer-1  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
load-balancer-1  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
load-balancer-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
load-balancer-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
load-balancer-1  | /docker-entrypoint.sh: Configuration complete; ready for start up
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":500}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":500}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":500}
api1-1           | json: {"failing":false,"minResponseTime":500}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":500}
api1-1           | json: {"failing":false,"minResponseTime":500}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":true,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":true,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":true,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":true,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":true,"minResponseTime":2000}
api1-1           | json: {"failing":true,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":1000}
api1-1           | json: {"failing":true,"minResponseTime":5000}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":true,"minResponseTime":5000}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":true,"minResponseTime":5000}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":true,"minResponseTime":5000}
api1-1           | json: {"failing":true,"minResponseTime":5000}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":true,"minResponseTime":5000}
api1-1           | json: {"failing":true,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":true,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":true,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":true,"minResponseTime":5}
api1-1           | json: {"failing":true,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":true,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":100}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":100}
api1-1           | json: {"failing":false,"minResponseTime":100}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":100}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":100}
api1-1           | json: {"failing":false,"minResponseTime":100}
api1-1           | json: {"failing":false,"minResponseTime":5}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":50}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":50}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":50}
api1-1           | json: {"failing":false,"minResponseTime":50}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":50}
api1-1           | json: {"failing":false,"minResponseTime":50}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":10}
api1-1           | json: {"failing":false,"minResponseTime":103}
api1-1           | json: {"failing":false,"minResponseTime":10}
api1-1           | json: {"failing":false,"minResponseTime":103}
api1-1           | json: {"failing":false,"minResponseTime":103}
api1-1           | json: {"failing":false,"minResponseTime":10}
api1-1           | json: {"failing":false,"minResponseTime":10}
api1-1           | json: {"failing":false,"minResponseTime":103}
api1-1           | json: {"failing":false,"minResponseTime":103}
api1-1           | json: {"failing":false,"minResponseTime":10}
api1-1           | json: {"failing":false,"minResponseTime":10}
api1-1           | json: {"failing":false,"minResponseTime":103}
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":0}
[Kredis-1 exited with code 137
redis-1          | Starting Redis Server
redis-1          | 1:C 18 Aug 2025 05:39:31.560 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis-1          | 1:C 18 Aug 2025 05:39:31.560 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis-1          | 1:C 18 Aug 2025 05:39:31.560 * Redis version=8.2.0, bits=64, commit=00000000, modified=1, pid=1, just started
redis-1          | 1:C 18 Aug 2025 05:39:31.560 * Configuration loaded
redis-1          | 1:M 18 Aug 2025 05:39:31.560 * monotonic clock: POSIX clock_gettime
redis-1          | 1:M 18 Aug 2025 05:39:31.607 * Running mode=standalone, port=6379.
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> RedisBloom version 8.2.0 (Git=unknown)
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> Registering configuration options: [
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ bf-error-rate       :      0.01 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ bf-initial-size     :       100 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ bf-expansion-factor :         2 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ cf-bucket-size      :         2 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ cf-initial-size     :      1024 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ cf-max-iterations   :        20 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ cf-expansion-factor :         1 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> 	{ cf-max-expansions   :        32 }
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * <bf> ]
redis-1          | 1:M 18 Aug 2025 05:39:31.612 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis-1          | 1:M 18 Aug 2025 05:39:31.682 * <search> Redis version found by RedisSearch : 8.2.0 - oss
redis-1          | 1:M 18 Aug 2025 05:39:31.682 * <search> RediSearch version 8.2.0 (Git=d81ebce)
redis-1          | 1:M 18 Aug 2025 05:39:31.683 * <search> Low level api version 1 initialized successfully
redis-1          | 1:M 18 Aug 2025 05:39:31.686 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis-1          | 1:M 18 Aug 2025 05:39:31.690 * <search> Initialized thread pools!
redis-1          | 1:M 18 Aug 2025 05:39:31.690 * <search> Disabled workers threadpool of size 0
redis-1          | 1:M 18 Aug 2025 05:39:31.693 * <search> Subscribe to config changes
redis-1          | 1:M 18 Aug 2025 05:39:31.693 * <search> Enabled role change notification
redis-1          | 1:M 18 Aug 2025 05:39:31.694 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
redis-1          | 1:M 18 Aug 2025 05:39:31.694 * <search> Register write commands
redis-1          | 1:M 18 Aug 2025 05:39:31.694 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> RedisTimeSeries version 80200, git_sha=1439d4a439ca9c063e6ef124a510abff09a5d493
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> Redis version found by RedisTimeSeries : 8.2.0 - oss
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> Registering configuration options: [
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-compaction-policy   :              }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-num-threads         :            3 }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-retention-policy    :            0 }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-encoding            :   compressed }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> ]
redis-1          | 1:M 18 Aug 2025 05:39:31.700 * <timeseries> Detected redis oss
redis-1          | 1:M 18 Aug 2025 05:39:31.701 * <timeseries> Enabled diskless replication
redis-1          | 1:M 18 Aug 2025 05:39:31.701 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis-1          | 1:M 18 Aug 2025 05:39:31.713 * <ReJSON> Created new data type 'ReJSON-RL'
redis-1          | 1:M 18 Aug 2025 05:39:31.716 * <ReJSON> version: 80200 git sha: unknown branch: unknown
redis-1          | 1:M 18 Aug 2025 05:39:31.717 * <ReJSON> Exported RedisJSON_V1 API
redis-1          | 1:M 18 Aug 2025 05:39:31.717 * <ReJSON> Exported RedisJSON_V2 API
redis-1          | 1:M 18 Aug 2025 05:39:31.717 * <ReJSON> Exported RedisJSON_V3 API
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * <ReJSON> Exported RedisJSON_V4 API
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * <ReJSON> Exported RedisJSON_V5 API
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * <ReJSON> Enabled diskless replication
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * <ReJSON> Initialized shared string cache, thread safe: false.
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * <search> Acquired RedisJSON_V5 API
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * Server initialized
redis-1          | 1:M 18 Aug 2025 05:39:31.718 * Ready to accept connections tcp
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":0}
api1-1           | json: {"failing":false,"minResponseTime":2000}
api1-1           | json: {"failing":false,"minResponseTime":0}
[Kload-balancer-1 exited with code 0
[Kapi2-1 exited with code 0
[Kapi1-1 exited with code 0
redis-1          | 1:signal-handler (1755495582) Received SIGTERM scheduling shutdown...
redis-1          | 1:M 18 Aug 2025 05:39:42.337 * User requested shutdown...
redis-1          | 1:M 18 Aug 2025 05:39:42.337 # Redis is now ready to exit, bye bye...
log truncated at line 1000
